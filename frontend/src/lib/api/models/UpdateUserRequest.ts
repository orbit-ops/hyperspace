/* tslint:disable */
/* eslint-disable */
/**
 * Ent Schema API
 * This is an auto generated API description made out of an Ent schema definition
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateUserRequest
 */
export interface UpdateUserRequest {
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    firstname?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    lastname?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    salt?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    photoUrl?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateUserRequest
     */
    disabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    disabledReason?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateUserRequest
     */
    group?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdateUserRequest
     */
    devices?: Array<string>;
    /**
     * 
     * @type {Array<number>}
     * @memberof UpdateUserRequest
     */
    keys?: Array<number>;
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdateUserRequest
     */
    audit?: Array<string>;
}

/**
 * Check if a given object implements the UpdateUserRequest interface.
 */
export function instanceOfUpdateUserRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateUserRequestFromJSON(json: any): UpdateUserRequest {
    return UpdateUserRequestFromJSONTyped(json, false);
}

export function UpdateUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateUserRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': !exists(json, 'email') ? undefined : json['email'],
        'firstname': !exists(json, 'firstname') ? undefined : json['firstname'],
        'lastname': !exists(json, 'lastname') ? undefined : json['lastname'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'salt': !exists(json, 'salt') ? undefined : json['salt'],
        'photoUrl': !exists(json, 'photo_url') ? undefined : json['photo_url'],
        'disabled': !exists(json, 'disabled') ? undefined : json['disabled'],
        'disabledReason': !exists(json, 'disabled_reason') ? undefined : json['disabled_reason'],
        'group': !exists(json, 'group') ? undefined : json['group'],
        'devices': !exists(json, 'devices') ? undefined : json['devices'],
        'keys': !exists(json, 'keys') ? undefined : json['keys'],
        'audit': !exists(json, 'audit') ? undefined : json['audit'],
    };
}

export function UpdateUserRequestToJSON(value?: UpdateUserRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'firstname': value.firstname,
        'lastname': value.lastname,
        'password': value.password,
        'salt': value.salt,
        'photo_url': value.photoUrl,
        'disabled': value.disabled,
        'disabled_reason': value.disabledReason,
        'group': value.group,
        'devices': value.devices,
        'keys': value.keys,
        'audit': value.audit,
    };
}

