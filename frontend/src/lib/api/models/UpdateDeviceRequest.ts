/* tslint:disable */
/* eslint-disable */
/**
 * Ent Schema API
 * This is an auto generated API description made out of an Ent schema definition
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateDeviceRequest
 */
export interface UpdateDeviceRequest {
    /**
     * 
     * @type {string}
     * @memberof UpdateDeviceRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateDeviceRequest
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateDeviceRequest
     */
    type?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdateDeviceRequest
     */
    dns?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof UpdateDeviceRequest
     */
    endpoint?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateDeviceRequest
     */
    allowedIps?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateDeviceRequest
     */
    user?: string;
}

/**
 * Check if a given object implements the UpdateDeviceRequest interface.
 */
export function instanceOfUpdateDeviceRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateDeviceRequestFromJSON(json: any): UpdateDeviceRequest {
    return UpdateDeviceRequestFromJSONTyped(json, false);
}

export function UpdateDeviceRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateDeviceRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'dns': !exists(json, 'dns') ? undefined : json['dns'],
        'endpoint': !exists(json, 'endpoint') ? undefined : json['endpoint'],
        'allowedIps': !exists(json, 'allowed_ips') ? undefined : json['allowed_ips'],
        'user': !exists(json, 'user') ? undefined : json['user'],
    };
}

export function UpdateDeviceRequestToJSON(value?: UpdateDeviceRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'type': value.type,
        'dns': value.dns,
        'endpoint': value.endpoint,
        'allowed_ips': value.allowedIps,
        'user': value.user,
    };
}

