/* tslint:disable */
/* eslint-disable */
/**
 * Ent Schema API
 * This is an auto generated API description made out of an Ent schema definition
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CreateGroupRequestRulesInner } from './CreateGroupRequestRulesInner';
import {
    CreateGroupRequestRulesInnerFromJSON,
    CreateGroupRequestRulesInnerFromJSONTyped,
    CreateGroupRequestRulesInnerToJSON,
} from './CreateGroupRequestRulesInner';

/**
 * 
 * @export
 * @interface UpdateGroupRequest
 */
export interface UpdateGroupRequest {
    /**
     * 
     * @type {string}
     * @memberof UpdateGroupRequest
     */
    name?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdateGroupRequest
     */
    scopes?: Array<UpdateGroupRequestScopesEnum>;
    /**
     * 
     * @type {string}
     * @memberof UpdateGroupRequest
     */
    cidr?: string;
    /**
     * 
     * @type {Array<CreateGroupRequestRulesInner>}
     * @memberof UpdateGroupRequest
     */
    rules?: Array<CreateGroupRequestRulesInner>;
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdateGroupRequest
     */
    users?: Array<string>;
}


/**
 * @export
 */
export const UpdateGroupRequestScopesEnum = {
    AdminUsersWrite: 'admin.users.write',
    AdminUsersReadonly: 'admin.users.readonly',
    AdminGroupsWrite: 'admin.groups.write',
    AdminGroupsReadonly: 'admin.groups.readonly',
    AdminDevicesWrite: 'admin.devices.write',
    AdminDevicesReadonly: 'admin.devices.readonly',
    AdminSettingsWrite: 'admin.settings.write',
    AdminSettingsReadonly: 'admin.settings.readonly',
    Admin: 'admin.*',
    UserDevicesWrite: 'user.devices.write',
    UserApikeyWrite: 'user.apikey.write',
    UserDevicesReadonly: 'user.devices.readonly',
    User: 'user.*'
} as const;
export type UpdateGroupRequestScopesEnum = typeof UpdateGroupRequestScopesEnum[keyof typeof UpdateGroupRequestScopesEnum];


/**
 * Check if a given object implements the UpdateGroupRequest interface.
 */
export function instanceOfUpdateGroupRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateGroupRequestFromJSON(json: any): UpdateGroupRequest {
    return UpdateGroupRequestFromJSONTyped(json, false);
}

export function UpdateGroupRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateGroupRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'scopes': !exists(json, 'scopes') ? undefined : json['scopes'],
        'cidr': !exists(json, 'cidr') ? undefined : json['cidr'],
        'rules': !exists(json, 'rules') ? undefined : ((json['rules'] as Array<any>).map(CreateGroupRequestRulesInnerFromJSON)),
        'users': !exists(json, 'users') ? undefined : json['users'],
    };
}

export function UpdateGroupRequestToJSON(value?: UpdateGroupRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'scopes': value.scopes,
        'cidr': value.cidr,
        'rules': value.rules === undefined ? undefined : ((value.rules as Array<any>).map(CreateGroupRequestRulesInnerToJSON)),
        'users': value.users,
    };
}

