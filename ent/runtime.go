// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/tiagoposse/connect/ent/apikey"
	"github.com/tiagoposse/connect/ent/group"
	"github.com/tiagoposse/connect/ent/schema"
	"github.com/tiagoposse/connect/ent/user"
	"github.com/tiagoposse/go-auth/controller"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	apikeyFields := schema.ApiKey{}.Fields()
	_ = apikeyFields
	// apikeyDescName is the schema descriptor for name field.
	apikeyDescName := apikeyFields[0].Descriptor()
	// apikey.NameValidator is a validator for the "name" field. It is called by the builders before save.
	apikey.NameValidator = apikeyDescName.Validators[0].(func(string) error)
	// apikeyDescScopes is the schema descriptor for scopes field.
	apikeyDescScopes := apikeyFields[2].Descriptor()
	// apikey.DefaultScopes holds the default value on creation for the scopes field.
	apikey.DefaultScopes = apikeyDescScopes.Default.(controller.Scopes)
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescScopes is the schema descriptor for scopes field.
	groupDescScopes := groupFields[1].Descriptor()
	// group.DefaultScopes holds the default value on creation for the scopes field.
	group.DefaultScopes = groupDescScopes.Default.(controller.Scopes)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescFirstname is the schema descriptor for firstname field.
	userDescFirstname := userFields[2].Descriptor()
	// user.FirstnameValidator is a validator for the "firstname" field. It is called by the builders before save.
	user.FirstnameValidator = userDescFirstname.Validators[0].(func(string) error)
	// userDescLastname is the schema descriptor for lastname field.
	userDescLastname := userFields[3].Descriptor()
	// user.LastnameValidator is a validator for the "lastname" field. It is called by the builders before save.
	user.LastnameValidator = userDescLastname.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[5].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescSalt is the schema descriptor for salt field.
	userDescSalt := userFields[6].Descriptor()
	// user.SaltValidator is a validator for the "salt" field. It is called by the builders before save.
	user.SaltValidator = userDescSalt.Validators[0].(func(string) error)
	// userDescDisabled is the schema descriptor for disabled field.
	userDescDisabled := userFields[8].Descriptor()
	// user.DefaultDisabled holds the default value on creation for the disabled field.
	user.DefaultDisabled = userDescDisabled.Default.(bool)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() string)
}
